{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/ContactForm/styles.js","components/ContactForm/index.jsx","components/ContactList/styles.js","components/ContactListItem/styles.js","components/ContactListItem/index.jsx","components/ContactList/index.jsx","components/Filter/styles.js","components/Filter/index.jsx","App.js","index.js"],"names":["addContact","createAction","deleteContact","filterContacts","initialState","items","filter","createReducer","state","action","payload","contact","id","_","combineReducers","persistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","useStyles","createUseStyles","form","display","flexDirection","flex","title","margin","padding","maginBottom","fontSize","color","input","btn","width","marginTop","backgroundColor","ContactForm","classes","dispatch","useDispatch","useState","name","setName","number","setNumber","className","onSubmit","e","preventDefault","newContact","shortid","generate","type","value","pattern","required","onChange","target","list","item","marginBottom","fontWeight","span","marginRight","ContactListItem","useSelector","find","getItem","console","log","onClick","filteredContacts","normalizedContact","toLowerCase","includes","ContactList","contacts","map","Filter","container","marginLeft","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bcc50bfc.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const filterContacts = createAction('contacts/filter');\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContacts } from './actions';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n};\n\nconst items = createReducer(initialState.contacts.items, {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload.id),\n});\nconst filter = createReducer(initialState.contacts.filter, {\n  [filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { configureStore } from '@reduxjs/toolkit';\n// import combineReducers from './reducer';\n// export const store = configureStore({ reducer: combineReducers });\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport contactsReducer from './reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  whitelist: ['items'],\n};\n\nexport const store = configureStore({\n  reducer: persistReducer(persistConfig, contactsReducer),\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n  title: {\n    margin: 0,\n    padding: 0,\n    maginBottom: 10,\n    fontSize: 20,\n    color: 'lightslategray',\n  },\n  input: {\n    padding: 5,\n  },\n  btn: {\n    width: 150,\n    marginTop: 10,\n    padding: 5,\n    backgroundColor: 'paleturquoise',\n  },\n});\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/actions';\nimport shortid from 'shortid';\nimport useStyles from './styles';\n\nconst ContactForm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <label>\n        <h3 className={classes.title}>Name</h3>\n        <input\n          className={classes.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </label>\n      <label>\n        <h3 className={classes.title}>Number</h3>\n        <input\n          className={classes.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={classes.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  list: {\n    margin: 0,\n    padding: 0,\n    marginTop: 20,\n  },\n});\n\nexport default useStyles;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  item: {\n    marginBottom: 5,\n    fontWeight: 600,\n  },\n  span: {\n    marginRight: 10,\n    fontWeight: 400,\n  },\n  btn: {\n    color: 'maroon',\n    backgroundColor: 'salmon',\n  },\n});\n\nexport default useStyles;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport useStyles from './styles';\n\nconst getItem = id => state => state.items.find(item => item.id === id);\n\nconst ContactListItem = ({ id }) => {\n  const classes = useStyles();\n  const { name, number } = useSelector(getItem(id));\n  console.log(id);\n  const dispatch = useDispatch();\n  const HandleDeleting = () => dispatch(deleteContact({ id }));\n\n  return (\n    <li className={classes.item} key={id}>\n      {name}: <span className={classes.span}>{number}</span>\n      <button className={classes.btn} type=\"button\" onClick={HandleDeleting}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport ContactListItem from '../ContactListItem';\n\n// const getContacts = state => state.items;\n\nconst filteredContacts = state => {\n  const normalizedContact = state.filter.toLowerCase();\n  return state.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContact),\n  );\n};\n\nconst ContactList = () => {\n  const classes = useStyles();\n  const contacts = useSelector(filteredContacts);\n  return (\n    <ul className={classes.list}>\n      {contacts.map(({ id }) => (\n        <ContactListItem key={id} id={id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  title: {\n    margin: 0,\n    padding: 0,\n    maginBottom: 10,\n    color: 'lightslategray',\n  },\n  input: {\n    padding: 5,\n  },\n});\n\nexport default useStyles;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/actions';\nimport useStyles from './styles';\n\nconst Filter = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleFilter = e => dispatch(filterContacts(e.target.value));\n  return (\n    <div>\n      <h4 className={classes.title}>Find contacts by name</h4>\n      <input\n        className={classes.input}\n        type=\"text\"\n        onChange={handleFilter}\n      ></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { createUseStyles } from 'react-jss';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst useStyles = createUseStyles({\n  container: {\n    marginLeft: 30,\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}